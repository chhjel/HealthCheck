variables:
# Static variables
- name: BuildParameters.MainBranchName
  value: master
- name: BuildParameters.ExperimentalBranchName
  value: experimental
- name: BuildParameters.Solution
  value: '**\*.sln'
- name: BuildParameters.ArtifactName
  value: drop
- name: BuildParameters.BuildPlatform
  value: 'Any CPU'
- name: BuildParameters.BuildConfiguration
  value: 'Release'
# Computed variables
- name: BuildParameters.CleanSourceBranch
  value: $[replace(variables['Build.SourceBranch'], 'refs/heads/', '')]
- name: BuildParameters.IsMain
  value: $[eq(variables['BuildParameters.CleanSourceBranch'], variables['BuildParameters.MainBranchName'])]
- name: BuildParameters.IsExperimental
  value: $[eq(variables['BuildParameters.CleanSourceBranch'], variables['BuildParameters.ExperimentalBranchName'])]
- name: BuildParameters.IsPr
  value: $[eq(variables['Build.Reason'], 'PullRequest')]
- name: BuildParameters.BuildReasonRevisionNumber
  value: $[counter(variables['BuildParameters.CleanSourceBranch'], 0)]
- name: BuildParameters.AssemblyVersion
  value: '4.0.$(BuildParameters.BuildReasonRevisionNumber)'
- name: BuildParameters.Publish
  value: $[or(eq(variables['BuildParameters.IsMain'], 'true'), eq(variables['BuildParameters.IsExperimental'], 'true'))]

name: 4.0.$(Rev:r)-$(Build.Reason)_$(SourceBranchName)

# Trigger section does not support variables
trigger:
  batch: true
  branches:
    include:
    - master
    - experimental

resources:
  repositories:
  - repository: self
    type: git
    ref: $(BuildParameters.MainBranchName)

jobs:
- job: BuildAndTestSolution
  displayName: Build and test solution
  pool:
    vmImage: windows-2022

  steps:
  - script: echo '##vso[task.setvariable variable=BuildParameters.AssemblyVersion]$(BuildParameters.AssemblyVersion)-$(BuildParameters.CleanSourceBranch)
    displayName: "Set experimental version suffix"
    condition: and(succeeded(), eq(variables['BuildParameters.IsExperimental'], 'true'))

  - script: |
      echo Version: $(BuildParameters.AssemblyVersion)
      echo Publish: $(BuildParameters.Publish)
    displayName: Debug variables

  - checkout: self

  - task: NuGetToolInstaller@0
    displayName: Use NuGet 5.x
    inputs:
      versionSpec: '5.x'

  - task: NuGetCommand@2
    displayName: Nuget restore
    inputs:
      command: 'restore'
      restoreSolution: '$(BuildParameters.Solution)'
      feedsToUse: 'config'
      nugetConfigPath: 'nuget.config'
  
  - task: UseDotNet@2
    displayName: Use .NET 6.0 SDK
    inputs:
      packageType: 'sdk'
      version: '6.x'

  - task: DotNetCoreCLI@2
    displayName: dotnet restore
    inputs:
      command: 'restore'
      feedsToUse: 'config'
      nugetConfigPath: 'nuget.config'

  ###########
  ## BUILD ##
  ###########
  - task: ReplaceInFilesTextByText@1
    displayName: Replace version in code 1
    inputs:
      parameterSearchText: 'https://unpkg.com/christianw-toolkit@2/'
      parameterReplaceText: 'https://unpkg.com/christianw-toolkit@$(BuildParameters.AssemblyVersion)/'
      parameterTypeOfSearch: 'filesList'
      parameterFilesList: |
        /Toolkit.Core/Config/TKAssetGlobalConfig.cs
        /Toolkit.WebUI/Models/TKPageOptions.cs
        /Toolkit.WebUI/Models/TKFrontEndOptions.cs
        /Toolkit.Core/Modules/Metrics/Context/TKMetricsUtil.cs
        /Toolkit.Core/Modules/ReleaseNotes/Util/TKReleaseNotesUtil.cs

  - task: ReplaceInFilesTextByText@1
    displayName: Replace version in code 2
    inputs:
      parameterSearchText: '[TKVERSION]'
      parameterReplaceText: '$(BuildParameters.AssemblyVersion)'
      parameterTypeOfSearch: 'filesList'
      parameterFilesList: |
        /Toolkit.WebUI.Assets/ConfigInitializer.cs

  - task: VSBuild@1
    displayName: Build solution
    inputs:
      solution: $(BuildParameters.Solution)
      msbuildArgs: /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\\" /p:Version=$(BuildParameters.AssemblyVersion)
      platform: $(BuildParameters.BuildPlatform)
      configuration: $(BuildParameters.BuildConfiguration)

  - task: NodeTool@0 
    displayName: 'Use node version 16.x'
    inputs:
      versionSpec: '16.x'

  - script: cd Toolkit.Frontend/ && yarn
    displayName: 'Yarn install'
  - script: cd Toolkit.Frontend/ && yarn build
    displayName: 'Yarn build'
  
  - task: ArchiveFiles@2
    displayName: Pack down frontend files for use in Toolkit.WebUI.Assets
    inputs:
      rootFolderOrFile: 'Toolkit.Frontend/dist' 
      includeRootFolder: false 
      archiveType: 'zip'
      archiveFile: 'Toolkit.WebUI.Assets/assets.zip' 
      replaceExistingArchive: true

  - task: VSBuild@1
    displayName: Build Toolkit.WebUI.Assets to pack down frontend
    inputs:
      solution: 'Toolkit.WebUI.Assets/Toolkit.WebUI.Assets.csproj'
      msbuildArgs: /p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\\" /p:Version=$(BuildParameters.AssemblyVersion)
      platform: $(BuildParameters.BuildPlatform)
      configuration: $(BuildParameters.BuildConfiguration)
  
  ##########
  ## TEST ##
  ##########
  - task: VSTest@2
    displayName: Test Assemblies
    inputs:
      testAssemblyVer2: >-
        **\$(BuildParameters.BuildConfiguration)\**\*.tests.dll

        !**\obj\**
      platform: $(BuildParameters.BuildPlatform)
      configuration: $(BuildParameters.BuildConfiguration)

  #############
  ## PUBLISH ##
  #############
  - task: NuGetCommand@2
    displayName: Publish to nuget.org
    condition: and(succeeded(), eq(variables['BuildParameters.Publish'], 'true'))
    inputs:
      command: 'push'
      packagesToPush: '**/Release/*.nupkg;!**/*.symbols.nupkg'
      nuGetFeedType: 'external'
      publishFeedCredentials: 'Nuget.org - ChristianHj'

  - task: Npm@1
    displayName: Set package.json version number
    condition: and(succeeded(), eq(variables['BuildParameters.Publish'], 'true'))
    inputs:
      command: 'custom'
      workingDir: 'Toolkit.Frontend/dist'
      customCommand: 'version $(BuildParameters.AssemblyVersion)'

  - task: Npm@1
    displayName: Publish to npmjs.org
    condition: and(succeeded(), eq(variables['BuildParameters.Publish'], 'true'))
    inputs:
      command: 'publish'
      workingDir: 'Toolkit.Frontend/dist/'
      verbose: true
      publishEndpoint: 'npmjs - ChristianW'

  - task: GitHubRelease@1
    displayName: Create GitHub release
    condition: and(succeeded(), eq(variables['BuildParameters.Publish'], 'true'))
    inputs:
      gitHubConnection: 'github.com_chhjel'
      repositoryName: 'chhjel/HealthCheck'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'userSpecifiedTag'
      tag: '$(BuildParameters.AssemblyVersion)'
      releaseNotesSource: 'inline'
      changeLogCompareToRelease: 'lastFullRelease'
      changeLogType: 'commitBased'

...
